[
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "NYC Housing Prices DANL Project",
    "section": "",
    "text": "1 Introduction\nAbout this project üëè\nOur mission as AGKF Real Estate is to figure out housing prices in NYC within different neighborhoods, and boroughs. This is relevant because we need to find the cost of housing to be able to make it more affordable for those living in NYC. The prices of homes today are on the rise, because of the pandemic and inflation and it is our mission to make it so everyone in NYC can have affordable living.\n\nnyc_housing_sales &lt;- read_csv(\"https://bcdanl.github.io/data/nyc_housing_sales_2006-2023.csv\")\n\n\n\n2 Data\nThe data.frame nyc_housing_sales contains a subset of the housing economy data which has data of housing sales within different boroughs and neighborhoods in New York City. You can access more information about the data.frame here: https://www.nyc.gov/site/finance/property/glossary-property-sales.page https://www.nyc.gov/assets/finance/jump/hlpbldgcode.html\nWhat is the average housing price for each borough in NYC? (ggplot)\n\naverage_prices &lt;- nyc_housing_sales |&gt;\n  group_by(borough) |&gt;\n  summarize(average_price =\n              mean(sale_price, na.rm = TRUE))\n\n\nggplot(data = average_prices) + \n  geom_col(mapping = \n               aes(x = borough, \n                   y = average_price),\n             alpha = .5) + \n  facet_grid(borough ~ .)\n\n\n\n\n\n\n\n\nWhat month was the most popular in Queens for housing sales?\n\ninstall.packages(\"readr\")\ninstall.packages(\"dplyr\")\nlibrary(readr)\nlibrary(dplyr)\n\n\nnyc_housing_sales &lt;- read.csv(\"https://bcdanl.github.io/data/nyc_housing_sales_2006-2023.csv\")\n\nmost_popular_month &lt;- nyc_housing_sales %&gt;%\n  filter(borough == \"Queens\") %&gt;%\n  group_by(month) %&gt;%\n  summarize(total_sales = n()) %&gt;%\n  arrange(desc(total_sales)) %&gt;%\n  slice(1)\n\nmost_popular_month$month\n\n[1] 8\n\n\nAnswer: August\nData Visualization\n\nlibrary(ggplot2)\n\nnyc_housing_sales &lt;- read.csv(\"https://bcdanl.github.io/data/nyc_housing_sales_2006-2023.csv\")\n\nmost_popular_month &lt;- nyc_housing_sales %&gt;%\n  filter(borough == \"Queens\") %&gt;%\n  group_by(month) %&gt;%\n  summarize(total_sales = n()) %&gt;%\n  arrange(desc(total_sales))\n\nall_months &lt;- unique(nyc_housing_sales$month)\n\nall_months_sales &lt;- merge(most_popular_month, data.frame(month = all_months), by = \"month\", all = TRUE)\n\nggplot(all_months_sales, aes(x = month, y = ifelse(is.na(total_sales), 0, total_sales))) +\n  geom_bar(stat = \"identity\", fill = \"blue\") +\n  labs(title = \"Monthly Housing Sales in Queens\",\n       x = \"Month\",\n       y = \"Total Sales\")\n\n\n\n\n\n\n\nggplot(all_months_sales, aes(x = month, y = ifelse(is.na(total_sales), 0, total_sales))) +\n  geom_bar(stat = \"identity\", fill = \"blue\") +\n  labs(title = \"Monthly Housing Sales in Queens\",\n       x = \"Month\",\n       y = \"Total Sales\") +\n  scale_x_discrete(labels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"))\n\n\n\n\n\n\n\n\nWhat is the average housing price for each neighborhood in the Queens borough?\n\nborough_name &lt;- \"Queens\"\nborough_data &lt;- nyc_housing_sales %&gt;%\n  filter(borough == borough_name)\n\nneighborhood_avg_price &lt;- borough_data %&gt;%\n  group_by(neighborhood) %&gt;%\n  summarize(avg_price = mean(sale_price))\n\nprint(neighborhood_avg_price)\n\n# A tibble: 59 √ó 2\n   neighborhood       avg_price\n   &lt;chr&gt;                  &lt;dbl&gt;\n 1 AIRPORT LA GUARDIA   694702.\n 2 ARVERNE              319446.\n 3 ASTORIA             1075393.\n 4 BAYSIDE              787965.\n 5 BEECHHURST           956192.\n 6 BELLE HARBOR         847342.\n 7 BELLEROSE            541771.\n 8 BRIARWOOD            600287.\n 9 BROAD CHANNEL        330752.\n10 CAMBRIA HEIGHTS      405349.\n# ‚Ñπ 49 more rows\n\n\nIs there any correlation between square footage and housing prices in different NYC boroughs? (ggplot)\n\ncor_data &lt;- nyc_housing_sales |&gt;\n  filter(!is.na(gross_square_feet) & !is.na(sale_price)) |&gt;\n           group_by(borough) |&gt;\n                      summarize(corr = cor(gross_square_feet,\n                                           sale_price)) \n\n\nggplot(cor_data, aes(x = borough, y = corr)) +\n  geom_col() +\n  labs(title = \"Correlation: Square Footage vs Housing Prices\",\n       x = \"Borough\",\n       y = \"Correlation Coefficient\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nHow many housing units were built in 1925?\n\nunits_1925 &lt;- nyc_housing_sales |&gt;\n  filter(year_built == 1925) |&gt;\n           summarize(total_units_1925 =\n                       sum(total_units, na.rm = TRUE))\n\nWhich zipcode in NYC has the most housing?\n\nnyc_housing_sales %&gt;%\n  group_by(zip_code) %&gt;%\n  count() %&gt;%\n  arrange(desc(n))\n\n# A tibble: 172 √ó 2\n# Groups:   zip_code [172]\n   zip_code     n\n      &lt;int&gt; &lt;int&gt;\n 1    10312  9023\n 2    10314  8036\n 3    10306  7979\n 4    11234  5900\n 5    11434  5230\n 6    10305  4552\n 7    11412  4525\n 8    11413  4043\n 9    10304  3957\n10    10309  3871\n# ‚Ñπ 162 more rows\n\n\nAnswer: 10312\nData Visualization\n\nlibrary(ggplot2)\n\nnyc_housing_sales %&gt;%\n  group_by(zip_code) %&gt;%\n  count() %&gt;%\n  arrange(desc(n)) %&gt;%\n  ggplot(aes(x = n, y = reorder(zip_code, n))) +\n  geom_bar(stat = \"identity\", fill = \"blue\") +\n  labs(title = \"Number of Housing Units by Zipcode in NYC\",\n       x = \"Number of Housing Units\",\n       y = \"Zipcode\")\n\n\n\n\n\n\n\n\nWhat is the most expensive neighborhood to live in NYC?\n\nmost_expensive_neighborhood &lt;- nyc_housing_sales %&gt;%\n  filter(sale_price == max(sale_price))\n\nmost_expensive_neighborhood_name &lt;- most_expensive_neighborhood$neighborhood[1]\n\nprint(paste(\"The most expensive neighborhood in NYC is:\", most_expensive_neighborhood_name))\n\n[1] \"The most expensive neighborhood in NYC is: REGO PARK\"\n\n\nWhat are the top 5 most expensive housing units in NYC?\n\ntop_5_expensive_units &lt;- nyc_housing_sales[order(-nyc_housing_sales$sale_price), ][1:5, ]\n\nprint(top_5_expensive_units)\n\n       year month day   borough            neighborhood\n112983 2017     3  28    Queens               REGO PARK\n125750 2017    11  21    Queens            FAR ROCKAWAY\n124133 2017    10  24    Queens          FLUSHING-NORTH\n118899 2017     7  21    Queens                  HOLLIS\n146076 2019     6   4 Manhattan UPPER EAST SIDE (59-79)\n                building_class_category block lot building_class_at_present\n112983              21 OFFICE BUILDINGS  2079   1                        O6\n125750 08 RENTALS - ELEVATOR APARTMENTS 15610   1                        D1\n124133               22 STORE BUILDINGS  4963  65                        K2\n118899                    30 WAREHOUSES 10352  79                        E9\n146076          01 ONE FAMILY DWELLINGS  1381  61                        A7\n                      address apartment_number zip_code residential_units\n112983 95-25 QUEENS BOULEVARD             &lt;NA&gt;    11374                 0\n125750    7-11 SEAGIRT AVENUE             &lt;NA&gt;    11691               917\n124133   131-01 39TH   AVENUE             &lt;NA&gt;    11354                 0\n118899  184-10 JAMAICA AVENUE             &lt;NA&gt;    11423                 0\n146076    14 EAST 67TH STREET             &lt;NA&gt;    10065                 1\n       commercial_units total_units land_square_feet gross_square_feet\n112983               10          10            74290            357760\n125750                0         917           201813            744719\n124133                1           1           139378             99589\n118899               16          16            57100            226605\n146076                0           1             4820             14240\n       year_built tax_class_at_time_of_sale building_class_at_time_of_sale\n112983       1975                         4                             O6\n125750       1974                         2                             D1\n124133       1961                         4                             K2\n118899       1920                         4                             E9\n146076       1905                         1                             A7\n       sale_price  sale_date\n112983  139874900 2017-03-28\n125750  135000000 2017-11-21\n124133  115000000 2017-10-24\n118899   78000000 2017-07-21\n146076   77100000 2019-06-04\n\n\nWhich borough has the most apartments? (ggplot)\n\nnyc_housing_sales %&gt;%\n  filter(building_class_category == \"09 COOPS - WALKUP APARTMENTS\") %&gt;%\n  group_by(borough) %&gt;%\n  count() %&gt;%\n  arrange(desc(n))\n\n# A tibble: 5 √ó 2\n# Groups:   borough [5]\n  borough           n\n  &lt;chr&gt;         &lt;int&gt;\n1 Manhattan        54\n2 Brooklyn         46\n3 Queens           40\n4 Bronx            17\n5 Staten Island     2\n\n\nAnswer: Manhattan\nData Visualization - Bar Chart\n\nlibrary(ggplot2)"
  },
  {
    "objectID": "project.html#summary-statistics",
    "href": "project.html#summary-statistics",
    "title": "DANL Project",
    "section": "2.1 Summary Statistics",
    "text": "2.1 Summary Statistics\n\nmpg &lt;- ggplot2::mpg\n\n\n\n\n  \n\n\n\nskim(mpg) %&gt;% \n  select(-n_missing)\n\n\nData summary\n\n\nName\nmpg\n\n\nNumber of rows\n234\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n6\n\n\nnumeric\n5\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\nskim_variable\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nmanufacturer\n1\n4\n10\n0\n15\n0\n\n\nmodel\n1\n2\n22\n0\n38\n0\n\n\ntrans\n1\n8\n10\n0\n10\n0\n\n\ndrv\n1\n1\n1\n0\n3\n0\n\n\nfl\n1\n1\n1\n0\n5\n0\n\n\nclass\n1\n3\n10\n0\n7\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\ndispl\n1\n3.47\n1.29\n1.6\n2.4\n3.3\n4.6\n7\n‚ñá‚ñÜ‚ñÜ‚ñÉ‚ñÅ\n\n\nyear\n1\n2003.50\n4.51\n1999.0\n1999.0\n2003.5\n2008.0\n2008\n‚ñá‚ñÅ‚ñÅ‚ñÅ‚ñá\n\n\ncyl\n1\n5.89\n1.61\n4.0\n4.0\n6.0\n8.0\n8\n‚ñá‚ñÅ‚ñá‚ñÅ‚ñá\n\n\ncty\n1\n16.86\n4.26\n9.0\n14.0\n17.0\n19.0\n35\n‚ñÜ‚ñá‚ñÉ‚ñÅ‚ñÅ\n\n\nhwy\n1\n23.44\n5.95\n12.0\n18.0\n24.0\n27.0\n44\n‚ñÖ‚ñÖ‚ñá‚ñÅ‚ñÅ"
  },
  {
    "objectID": "project.html#mpg-and-a-type-of-cars",
    "href": "project.html#mpg-and-a-type-of-cars",
    "title": "DANL Project",
    "section": "2.2 MPG and a Type of Cars",
    "text": "2.2 MPG and a Type of Cars\nThe following boxplot shows how the distribution of highway MPG (hwy) varies by a type of cars (class) üöô üöö üöê.\n\nggplot(data = mpg) +\n  geom_boxplot(aes(x = class, y = hwy, fill = class),\n               show.legend = F) +\n  labs(x = \"Class\", y = \"Highway\\nMPG\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Kenzie Perkins",
    "section": "",
    "text": "My name is Kenzie Perkins. I am currently studying in accounting here at SUNY Geneseo. When I have free time I enjoy hanging out with my family, and traveling to new and different places!"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Kenzie Perkins",
    "section": "Education",
    "text": "Education\nGraduate of Corning Community College|Associate‚Äôs Degree in Accounting. Currently Studying at SUNY Geneseo|Studying for Bachelor‚Äôs Degree in Accounting."
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Kenzie Perkins",
    "section": "Experience",
    "text": "Experience\nPrevious Payroll Specialist at Upstate Payroll Services LLC."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn‚Äôt specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code with no space in the folder name.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "posts/starwars/starwars_df.html",
    "href": "posts/starwars/starwars_df.html",
    "title": "Starwars",
    "section": "",
    "text": "Let‚Äôs analyze the starwars data:\nstarwars &lt;- read_csv(\"https://bcdanl.github.io/data/starwars.csv\")"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "href": "posts/starwars/starwars_df.html#variable-description-for-starwars-data.frame",
    "title": "Starwars",
    "section": "Variable Description for starwars data.frame",
    "text": "Variable Description for starwars data.frame\nThe following describes the variables in the starwars data.frame.\n\nfilms List of films the character appeared in\nname Name of the character\nspecies Name of species\nheight Height (cm)\nmass Weight (kg)\nhair_color, skin_color, eye_color Hair, skin, and eye colors\nbirth_year Year born (BBY = Before Battle of Yavin)\nsex The biological sex of the character, namely male, female, hermaphroditic, or none (as in the case for Droids).\ngender The gender role or gender identity of the character as determined by their personality or the way they were programmed (as in the case for Droids).\nhomeworld Name of homeworld"
  },
  {
    "objectID": "posts/starwars/starwars_df.html#human-vs.-droid",
    "href": "posts/starwars/starwars_df.html#human-vs.-droid",
    "title": "Starwars",
    "section": "Human vs.¬†Droid",
    "text": "Human vs.¬†Droid\n\nggplot(data = \n         starwars %&gt;% \n         filter(species %in% c(\"Human\", \"Droid\"))) +\n  geom_boxplot(aes(x = species, y = mass, \n                   fill = species),\n               show.legend = FALSE)"
  },
  {
    "objectID": "blog-listing.html",
    "href": "blog-listing.html",
    "title": "Insightful Analytics",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\n\n\n\nHealth Insurance\n\n\n\n\n\n\n\n\nApr 30, 2024\n\n\nKenzie Perkins\n\n\n6 min\n\n\n\n\n\n\n\n\n\n\n\n\nStarwars\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nYour Name\n\n\n3 min\n\n\n\n\n\n\n\n\n\n\n\n\nPost With Code\n\n\n\n\n\n\n\n\nOct 30, 2023\n\n\nYOUR NAME\n\n\n1 min\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\n\n\nOct 27, 2023\n\n\nYOUR NAME\n\n\n1 min\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "danl-200-quarto (2).html",
    "href": "danl-200-quarto (2).html",
    "title": "DANL Project",
    "section": "",
    "text": "1 Auto-completion\n\n\nCode\nlibrary(tidyverse)\n\n\n\n\nCode\nfare &lt;- \"10.00\"\ntip &lt;- \"2.00\"\ntax &lt;- \"0.80\""
  },
  {
    "objectID": "danl-200-quarto (2).html#dive-into-markdown-syntax",
    "href": "danl-200-quarto (2).html#dive-into-markdown-syntax",
    "title": "DANL Project",
    "section": "",
    "text": "Check out Classwork 3 - Markdown Basics"
  },
  {
    "objectID": "danl-200-quarto (2).html#r-as-a-calculator",
    "href": "danl-200-quarto (2).html#r-as-a-calculator",
    "title": "DANL Project",
    "section": "2.1 1. R as a Calculator",
    "text": "2.1 1. R as a Calculator\nR can be used as a simple calculator. You can perform arithmetic operations like addition (+), subtraction (-), multiplication (*), and division (/). For example, typing 2 + 2 in the R console will give you 4."
  },
  {
    "objectID": "danl-200-quarto (2).html#variables",
    "href": "danl-200-quarto (2).html#variables",
    "title": "DANL Project",
    "section": "2.2 Variables",
    "text": "2.2 Variables\nVariables in R are used to store data. You can create a variable using the assignment operator &lt;- (option/Alt + -). For example:\n\n\nCode\nmy_variable &lt;- 10\n\n\nThis will store the value 10 in my_variable."
  },
  {
    "objectID": "danl-200-quarto (2).html#data-types",
    "href": "danl-200-quarto (2).html#data-types",
    "title": "DANL Project",
    "section": "2.3 Data Types",
    "text": "2.3 Data Types\n\nR has several basic data types:\n\nNumeric: For decimal values like 2.5.\nInteger: For whole numbers like 2L (the L tells R it is an integer).\nCharacter: For text or string values, e.g., \"Hello\".\nLogical: For boolean values (TRUE or FALSE)."
  },
  {
    "objectID": "danl-200-quarto (2).html#vectors",
    "href": "danl-200-quarto (2).html#vectors",
    "title": "DANL Project",
    "section": "2.4 Vectors",
    "text": "2.4 Vectors\nVectors are a basic data structure in R. They contain elements of the same type. You can create a vector using the c() function:\n\n\nCode\nmy_vector &lt;- c(1, 2, 3, 4, 5)"
  },
  {
    "objectID": "danl-200-quarto (2).html#data-frames",
    "href": "danl-200-quarto (2).html#data-frames",
    "title": "DANL Project",
    "section": "2.5 Data Frames",
    "text": "2.5 Data Frames\nData frames are used for storing data tables in R. It is a list of vectors of equal length. For example, to create a simple data frame:\n\n\nCode\ndf &lt;- data.frame(\n  Name = c(\"Alice\", \"Bob\"), \n  Age = c(25, 30)\n  )"
  },
  {
    "objectID": "danl-200-quarto (2).html#functions",
    "href": "danl-200-quarto (2).html#functions",
    "title": "DANL Project",
    "section": "2.6 Functions",
    "text": "2.6 Functions\nFunctions are used to carry out specific tasks in R. For example, sum() is a function that adds numbers together:\n\n\nCode\nsum(1, 2, 3) # Returns 6\n\n\n[1] 6"
  },
  {
    "objectID": "danl-200-quarto (2).html#packages",
    "href": "danl-200-quarto (2).html#packages",
    "title": "DANL Project",
    "section": "2.7 Packages",
    "text": "2.7 Packages\nR has a vast collection of packages for various statistical tasks. You can install a package using install.packages(\"packageName\") and load it using library(packageName)."
  },
  {
    "objectID": "danl-200-quarto (2).html#help-system",
    "href": "danl-200-quarto (2).html#help-system",
    "title": "DANL Project",
    "section": "2.8 Help System",
    "text": "2.8 Help System\nTo get help on a specific function or topic, use the help() function or the shorthand ?, like ?sum on R Console."
  },
  {
    "objectID": "danl-200-quarto.html",
    "href": "danl-200-quarto.html",
    "title": "DANL Project",
    "section": "",
    "text": "1 Auto-completion\n\n\nCode\nlibrary(tidyverse)\n\n\n\n\nCode\nfare &lt;- 10.00\ntip &lt;- 2.00\ntax &lt;- 0.80\n\n\ntotal &lt;- tax + tip + fare str_c(‚Äúthe total trip cost is: $‚Äù) total\n\n\nCode\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy,\n                           color = cty))\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy,\n                           color = displ &lt;5))\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot(data = mpg) + \n  geom_point(mapping = aes(x = displ, y = hwy,\n                           color = displ &gt; 5 & hwy &gt; 20))\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy), \n             alpha = .5) + \n  facet_wrap( class ~ .) #in R we use ~ instead of equal signs for formulas.\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy), \n             alpha = .5) + \n  facet_wrap( class ~ . , nrow = 1)\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy), \n             alpha = .5) + \n  facet_wrap( class ~ . , ncol = 2)\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .5) + \n  facet_grid(drv ~ cyl)\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot(data = mpg) + \n  geom_boxplot(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .5) + \n  facet_grid(drv ~ cyl, \n             scales = \"free_x\")\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot(data = mpg) + \n  geom_point(mapping = \n               aes(x = displ, \n                   y = hwy),\n             alpha = .3) +\n  geom_smooth(mapping = \n                aes(x = displ, \n                    y = hwy))"
  },
  {
    "objectID": "danl-200-hw-01-q (1).html",
    "href": "danl-200-hw-01-q (1).html",
    "title": "Homework 1 - Part 3",
    "section": "",
    "text": "library(tidyverse)\nlibrary(skimr)"
  },
  {
    "objectID": "danl-200-hw-01-q (1).html#question-0.",
    "href": "danl-200-hw-01-q (1).html#question-0.",
    "title": "Homework 1 - Part 3",
    "section": "Question 0.",
    "text": "Question 0.\nProvide your GitHub username.\nAnswer: kenzieperkins"
  },
  {
    "objectID": "danl-200-hw-01-q (1).html#question-1.",
    "href": "danl-200-hw-01-q (1).html#question-1.",
    "title": "Homework 1 - Part 3",
    "section": "Question 1.",
    "text": "Question 1.\nbase-R provides the R object state.name. Write an R code to assign state.name to a variable, US_states.\nAnswer:\n\nUS_states &lt;- state.name\nUS_states\n\n [1] \"Alabama\"        \"Alaska\"         \"Arizona\"        \"Arkansas\"      \n [5] \"California\"     \"Colorado\"       \"Connecticut\"    \"Delaware\"      \n [9] \"Florida\"        \"Georgia\"        \"Hawaii\"         \"Idaho\"         \n[13] \"Illinois\"       \"Indiana\"        \"Iowa\"           \"Kansas\"        \n[17] \"Kentucky\"       \"Louisiana\"      \"Maine\"          \"Maryland\"      \n[21] \"Massachusetts\"  \"Michigan\"       \"Minnesota\"      \"Mississippi\"   \n[25] \"Missouri\"       \"Montana\"        \"Nebraska\"       \"Nevada\"        \n[29] \"New Hampshire\"  \"New Jersey\"     \"New Mexico\"     \"New York\"      \n[33] \"North Carolina\" \"North Dakota\"   \"Ohio\"           \"Oklahoma\"      \n[37] \"Oregon\"         \"Pennsylvania\"   \"Rhode Island\"   \"South Carolina\"\n[41] \"South Dakota\"   \"Tennessee\"      \"Texas\"          \"Utah\"          \n[45] \"Vermont\"        \"Virginia\"       \"Washington\"     \"West Virginia\" \n[49] \"Wisconsin\"      \"Wyoming\""
  },
  {
    "objectID": "danl-200-hw-01-q (1).html#question-2.",
    "href": "danl-200-hw-01-q (1).html#question-2.",
    "title": "Homework 1 - Part 3",
    "section": "Question 2.",
    "text": "Question 2.\nThe temp_F vector contains the average high temperatures in January for the following cities: Seoul, Lagos, Paris, Rio de Janeiro, San Juan, and Rochester.\n\ntemp_F &lt;- c(35, 88, 42, 84, 81, 30)\n\nCreate a new vector named temp_C that stores the converted Celsius temperatures. Below is the conversion formula:\n\\[\nC = \\frac{5}{9}\\times(F - 32)\n\\]\nAnswer:\n\ntemp_C &lt;- (5/9) * (temp_F - 32) \ntemp_C\n\n[1]  1.666667 31.111111  5.555556 28.888889 27.222222 -1.111111"
  },
  {
    "objectID": "danl-200-hw-01-q (1).html#question-3.",
    "href": "danl-200-hw-01-q (1).html#question-3.",
    "title": "Homework 1 - Part 3",
    "section": "Question 3.",
    "text": "Question 3.\n\nWrite an R code to calculate the standard deviation (SD) of the integer vector x below manually. That is to calculate the SD without using the sd() function.\n\n\nx &lt;- 1:25\n\n\nAlso, write an R code to test whether the standard deviation you calculate manually above is equal to sd(x).\n\nAnswer:\n\nx &lt;- 1:25\nsd_x &lt;- sqrt(sum(( x - mean(x))^2) / (length(x) - 1))\nsd_x\n\n[1] 7.359801\n\nsd(x)\n\n[1] 7.359801\n\nsd_x == sd(x)\n\n[1] TRUE"
  },
  {
    "objectID": "danl-200-hw-01-q (1).html#question-4.",
    "href": "danl-200-hw-01-q (1).html#question-4.",
    "title": "Homework 1 - Part 3",
    "section": "Question 4.",
    "text": "Question 4.\n\nWrite an R code to read the CSV file, https://bcdanl.github.io/data/mlb_teams.csv using the tidyverse‚Äôs read_csv() function, and assign it to MLB_teams.\n\nAnswer:\n\npathname &lt;- \"https://bcdanl.github.io/data/mlb_teams.csv\"\nMLB_teams &lt;- read_csv(pathname)"
  },
  {
    "objectID": "danl-200-hw-01-q (1).html#question-5.",
    "href": "danl-200-hw-01-q (1).html#question-5.",
    "title": "Homework 1 - Part 3",
    "section": "Question 5.",
    "text": "Question 5.\nWrite an R code to provide summary statistics‚Äîmean, standard deviation, minimum, first quartile, median, third quartile, and maximum‚Äîfor variables in the MLB_teams data.frame.\nAnswer:\n\nskim(MLB_teams)\n\n\nData summary\n\n\nName\nMLB_teams\n\n\nNumber of rows\n210\n\n\nNumber of columns\n11\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n3\n\n\nnumeric\n8\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nteamID\n0\n1\n3\n3\n0\n31\n0\n\n\nlgID\n0\n1\n2\n2\n0\n2\n0\n\n\nname\n0\n1\n12\n29\n0\n31\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nyearID\n0\n1\n2011.00\n2.00\n2008.00\n2009.00\n2011.00\n2013.00\n2014.00\n‚ñá‚ñÉ‚ñÉ‚ñÉ‚ñá\n\n\nW\n0\n1\n80.99\n11.11\n51.00\n73.00\n81.00\n90.00\n103.00\n‚ñÅ‚ñÖ‚ñá‚ñá‚ñÖ\n\n\nL\n0\n1\n80.99\n11.08\n59.00\n72.00\n81.00\n89.00\n111.00\n‚ñÖ‚ñá‚ñá‚ñÖ‚ñÅ\n\n\nWPct\n0\n1\n0.50\n0.07\n0.31\n0.45\n0.50\n0.56\n0.64\n‚ñÅ‚ñÖ‚ñá‚ñá‚ñÖ\n\n\nattendance\n0\n1\n2481715.02\n665564.37\n1335076.00\n1940441.25\n2418204.00\n3041615.00\n4298655.00\n‚ñÜ‚ñá‚ñÜ‚ñÉ‚ñÅ\n\n\nnormAttend\n0\n1\n0.58\n0.15\n0.31\n0.45\n0.56\n0.71\n1.00\n‚ñÜ‚ñá‚ñÜ‚ñÉ‚ñÅ\n\n\npayroll\n0\n1\n94365324.41\n40266547.26\n17890700.00\n67325266.00\n85803966.50\n114741108.75\n231978886.00\n‚ñÇ‚ñá‚ñÉ‚ñÅ‚ñÅ\n\n\nmetroPop\n0\n1\n6014841.23\n4817724.83\n1572245.00\n2785874.00\n4541584.50\n6490180.00\n20092883.00\n‚ñá‚ñÉ‚ñÅ‚ñÅ‚ñÅ"
  },
  {
    "objectID": "danl-200-hw-02-q.html",
    "href": "danl-200-hw-02-q.html",
    "title": "Homework 2",
    "section": "",
    "text": "Provide your answer to each question in Part 1 in Homework 2.\nPlease submit your Quarto document for Part 1 in Homework 2 to the Brightspace with the name below:\n\ndanl-200-hw2-LASTNAME-FIRSTNAME.qmd\n( e.g., danl-200-hw2-choe-byeonghak.qmd )\n\nThe due is March 8, 2024, 11:59 P.M.\nPlease send an email to Byeong-Hak (bchoe@geneseo.edu) if you have any questions or clarifications."
  },
  {
    "objectID": "danl-200-hw-02-q.html#variable-description",
    "href": "danl-200-hw-02-q.html#variable-description",
    "title": "Homework 2",
    "section": "Variable Description",
    "text": "Variable Description\n\ntconst: alphanumeric unique identifier of the title\ntitle_type: the type/format of the title\ntitle: the more popular title / the title used by the filmmakers on promotional materials at the point of release\ngenre: genre associated with the title\nyear: the release year of a title\nruntime_minutes: primary runtime of the title, in minutes\naverage_rating: weighted average of all the individual user ratings on IMDb\nnum_votes: number of votes the title has received on IMDb"
  },
  {
    "objectID": "danl-200-hw-02-q.html#question-1.",
    "href": "danl-200-hw-02-q.html#question-1.",
    "title": "Homework 2",
    "section": "Question 1.",
    "text": "Question 1.\nProvide both (1) ggplot code and (2) a comment to describe how the relationship between log10(num_votes) and average_rating varies by genre.\nAnswer:\n\nggplot(data = holiday_movies) + \n  geom_point(mapping = \n               aes(x = log10(num_votes),\n                   y = average_rating,\n                   color = genre))\n\n\n\n\n\n\n\n\n#Q1 Response ##The relationship bewtween the number of votes and the ratings with genre; The family genre seems to have the highest average rating compared to other genres, however when it has a high rating it doesn‚Äôt have any votes. In general it looks like that the more votes a genre has, the average rating it around 6-7.5 since more people are voting and giving opinions."
  },
  {
    "objectID": "danl-200-hw-02-q.html#question-2.",
    "href": "danl-200-hw-02-q.html#question-2.",
    "title": "Homework 2",
    "section": "Question 2.",
    "text": "Question 2.\nProvide both (1) ggplot code and (2) a comment to describe how the distribution of genre varies by title_type.\nAnswer:\n\nggplot(data = holiday_movies) + \n  geom_bar(mapping = \n               aes(y = genre,\n                   color = title_type))\n\n\n\n\n\n\n\n\n#Q2 Response ##The relationship between the genre and title type is that tvMovies is the most popular."
  },
  {
    "objectID": "danl-200-hw-02-q.html#question-3.",
    "href": "danl-200-hw-02-q.html#question-3.",
    "title": "Homework 2",
    "section": "Question 3.",
    "text": "Question 3.\nProvide both (1) ggplot code and (2) a comment to describe how the distribution of average_rating, such as quartile values and outliers, varies by genre and title_type.\nAnswer:\n\nggplot(data = holiday_movies) + \n  geom_boxplot(mapping = \n                aes(x = average_rating, \n                    y = genre,\n                    color = title_type))\n\n\n\n\n\n\n\n\n#Q3 Response ## The relationship between the outliers and quartiles is that the outliers are furthest away from the second quartile. For movies the outliers when they are present they have the greatest distance from the second quartile."
  },
  {
    "objectID": "danl-200-hw-02-q.html#question-4.",
    "href": "danl-200-hw-02-q.html#question-4.",
    "title": "Homework 2",
    "section": "Question 4.",
    "text": "Question 4.\nProvide both (1) ggplot code and (2) a comment to describe how the distribution of log(num_votes) varies by genre.\nAnswer:\n\nggplot(data = holiday_movies) + \n  geom_col(mapping = \n               aes(x = log(num_votes),\n                   y = genre,\n                   color = genre)) \n\n\n\n\n\n\n\n\n#Question 4 Response ## You are able to gather that comedy have the most amount of votes while the animation genre has the least amount of votes."
  },
  {
    "objectID": "danl-200-hw-02-q.html#question-5.",
    "href": "danl-200-hw-02-q.html#question-5.",
    "title": "Homework 2",
    "section": "Question 5.",
    "text": "Question 5.\nBelow is the data.frame, holiday_movies_genre_yearly, containing yearly mean value of average_rating for each genre.\n\nholiday_movies_genre_yearly &lt;- read_csv(\"https://bcdanl.github.io/data/holiday_movies_w_genres_yearly.csv\")\n\nProvide both (1) ggplot code and (2) a comment to describe how the yearly trend of average_rating varies by genre.\nAnswer:\n\nggplot(data = holiday_movies_genre_yearly) + \n  geom_boxplot(mapping = \n                aes(x = average_rating, \n                    y = year,\n                    color = genre))\n\n\n\n\n\n\n\n\n#Q5 Response ## The data shows that the average rating for romance seemed to get higher in the early 2000‚Äôs compared to the other genres, which had a higher average rating in the 90‚Äôs."
  },
  {
    "objectID": "danl-200-hw-02-q.html#question-6.",
    "href": "danl-200-hw-02-q.html#question-6.",
    "title": "Homework 2",
    "section": "Question 6.",
    "text": "Question 6.\nProvide your GitHub username, if you have not provided it in Homework 1.\nAnswer:"
  },
  {
    "objectID": "posts/Health Insurance/Health_Insurance.html",
    "href": "posts/Health Insurance/Health_Insurance.html",
    "title": "Health Insurance",
    "section": "",
    "text": "Let‚Äôs analyze the health_ins data:"
  },
  {
    "objectID": "posts/Health Insurance/Health_Insurance.html#variable-description",
    "href": "posts/Health Insurance/Health_Insurance.html#variable-description",
    "title": "Health Insurance",
    "section": "Variable Description",
    "text": "Variable Description\n\ntconst: alphanumeric unique identifier of the title\ntitle_type: the type/format of the title\ntitle: the more popular title / the title used by the filmmakers on promotional materials at the point of release\ngenre: genre associated with the title\nyear: the release year of a title\nruntime_minutes: primary runtime of the title, in minutes\naverage_rating: weighted average of all the individual user ratings on IMDb\nnum_votes: number of votes the title has received on IMDb"
  },
  {
    "objectID": "posts/Health Insurance/Health_Insurance.html#question-1.",
    "href": "posts/Health Insurance/Health_Insurance.html#question-1.",
    "title": "Health Insurance",
    "section": "Question 1.",
    "text": "Question 1.\nProvide both (1) ggplot code and (2) a comment to describe how the relationship between log10(num_votes) and average_rating varies by genre.\nAnswer:\n\nggplot(data = holiday_movies) + \n  geom_point(mapping = aes(x = log10(num_votes), y = average_rating),\n             alpha = .33) +\n   facet_grid(genre ~ .)\n\n\n\n\n\n\n\n\n#Q1 Response ##The relationship bewtween the number of votes and the ratings with genre; Most of the genres have many votes, besides the animation. You can see that most of the time the average rating is around 5-7.5"
  },
  {
    "objectID": "posts/Health Insurance/Health_Insurance.html#question-2.",
    "href": "posts/Health Insurance/Health_Insurance.html#question-2.",
    "title": "Health Insurance",
    "section": "Question 2.",
    "text": "Question 2.\nProvide both (1) ggplot code and (2) a comment to describe how the distribution of genre varies by title_type.\nAnswer:\n\nggplot(data = holiday_movies) + \n  geom_bar(mapping = \n               aes(y = genre,\n                   color = title_type))\n\n\n\n\n\n\n\n\n#Q2 Response ##The relationship between the genre and title type is that tvMovies is the most popular."
  },
  {
    "objectID": "posts/Health Insurance/Health_Insurance.html#question-3.",
    "href": "posts/Health Insurance/Health_Insurance.html#question-3.",
    "title": "Health Insurance",
    "section": "Question 3.",
    "text": "Question 3.\nProvide both (1) ggplot code and (2) a comment to describe how the distribution of average_rating, such as quartile values and outliers, varies by genre and title_type.\nAnswer:\n\nggplot(data = holiday_movies) + \n  geom_boxplot(mapping = \n                aes(x = average_rating, \n                    y = genre,\n                    color = title_type))\n\n\n\n\n\n\n\n\n#Q3 Response ## The relationship between the outliers and quartiles is that the outliers are furthest away from the second quartile. For movies the outliers when they are present they have the greatest distance from the second quartile."
  },
  {
    "objectID": "posts/Health Insurance/Health_Insurance.html#question-4.",
    "href": "posts/Health Insurance/Health_Insurance.html#question-4.",
    "title": "Health Insurance",
    "section": "Question 4.",
    "text": "Question 4.\nProvide both (1) ggplot code and (2) a comment to describe how the distribution of log(num_votes) varies by genre.\nAnswer:\n\nggplot(data = holiday_movies) + \n  geom_col(mapping = \n               aes(x = log(num_votes),\n                   y = genre,\n                   color = genre)) \n\n\n\n\n\n\n\n\n#Question 4 Response ## You are able to gather that comedy have the most amount of votes while the animation genre has the least amount of votes."
  },
  {
    "objectID": "posts/Health Insurance/Health_Insurance.html#question-5.",
    "href": "posts/Health Insurance/Health_Insurance.html#question-5.",
    "title": "Health Insurance",
    "section": "Question 5.",
    "text": "Question 5.\nBelow is the data.frame, holiday_movies_genre_yearly, containing yearly mean value of average_rating for each genre.\n\nholiday_movies_genre_yearly &lt;- read_csv(\"https://bcdanl.github.io/data/holiday_movies_w_genres_yearly.csv\")\n\nProvide both (1) ggplot code and (2) a comment to describe how the yearly trend of average_rating varies by genre.\nAnswer:\n\nggplot(data = holiday_movies_genre_yearly) + \n  geom_boxplot(mapping = \n                aes(x = average_rating, \n                    y = year,\n                    color = genre))\n\n\n\n\n\n\n\n\n#Q5 Response ## The data shows that the average rating for romance seemed to get higher in the early 2000‚Äôs compared to the other genres, which had a higher average rating in the 90‚Äôs."
  }
]